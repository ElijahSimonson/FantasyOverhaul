buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.


version = "1.0-A"
group= "nz.castorgaming.fantasyoverhaul" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "fantasyoverhaul"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161111"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
  maven {
    // location of the maven that hosts JEI files
    name = "Progwml6 maven"
    url = "http://dvs1.progwml6.com/files/maven"
  }
  maven {
    // location of a maven mirror for JEI files, as a fallback
    name = "ModMaven"
    url = "modmaven.k-4u.nl"
  }
  maven {url "http://tehnut.info/maven/"}
  maven { url = "http://mobiusstrip.eu/maven" }
  maven { url = "http://chickenbones.net/maven/" }
  maven { url = "http://dl.tsr.me/artifactory/libs-release-local" }
  maven { url = "http://maven.tterrag.com" }
  maven { url = "http://maven.ic2.player.to" }
  maven { url = "http://maven.cil.li/" }
}

dependencies {

  deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
  deobfProvided "com.wayoftime.bloodmagic:BloodMagic:${mc_version}-${way_of_time_version}:api"
  
 compile files("lib/WearableBackpacks-1.10.2-1.7.0-api.jar")
  
  compile "appeng:appliedenergistics2:${ae2_version}:dev"
  compile "com.enderio.core:EnderCore:${endercore_version}:dev"
  deobfCompile "mcp.mobius.waila:Waila:${waila_version}:dev"
  deobfCompile "net.sengir.forestry:${forestry_version}:api"
  deobfCompile "li.cil.oc:OpenComputers:${opencomputers_version}:api"
  deobfCompile "info.amerifrance.guideapi:Guide-API:1.10.2-2.0.3-46"
  
  //Runtime
  runtime files("lib/Baubles-1.10.2-1.3.13-deobf.jar", "lib/Thaumcraft-1.10.2-6.0.BETA3-deobf.jar", "lib/WearableBackpacks-1.10.2-1.7.0-deobf.jar")
  runtime "mezz.jei:jei_${mc_version}:${jei_version}"
  runtime "com.wayoftime.bloodmagic:BloodMagic:${mc_version}-${way_of_time_version}"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


